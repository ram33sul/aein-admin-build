{"version":3,"file":"static/js/367.6f741155.chunk.js","mappings":"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","sources":["webpack://frontend/./src/components/fragments/Messages/Messages.module.css?c267","components/fragments/Messages/Messages.tsx","webpack://frontend/./src/components/general/CountedData/CountedData.module.css?5790","webpack://frontend/./src/components/general/ViewText/ViewText.module.css?c0a9","components/general/ViewText/ViewText.tsx","components/general/CountedData/CountedData.tsx","webpack://frontend/./src/components/general/ErrorMessage/ErrorMessage.module.css?4416","components/general/ErrorMessage/ErrorMessage.tsx","customHooks/api.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Messages_container__2eHe6\",\"buttons-container\":\"Messages_buttons-container__6uaif\"};","import useApi from '../../../customHooks/api';\nimport styles from './Messages.module.css'; \nimport { Mood } from '../../../interfaces';\nimport CountedData from '../../general/CountedData/CountedData';\nimport { useEffect, useMemo } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport ButtonOne from '../../general/ButtonOne/ButtonOne';\n\ninterface Messages {\n    onlineUsers: number,\n    messagedUsersToday: number,\n    totalMessages: number,\n    totalMessagesToday: number\n}\n       \n\nfunction Messsages(){\n\n    const navigate = useNavigate()\n\n    const [ messages, messagesError, messagesLoading ] = useApi<Messages>({\n        url: '/messagesCount'\n    })\n\n\n\n    return (\n        <div className={styles.container}>\n                <CountedData \n                    loading={messagesLoading}\n                    heading=\"Total messages count\"\n                    count={messages?.totalMessages ?? 0}\n                    subHeading='Total messages today'\n                    subCount={messages?.totalMessagesToday ?? 0}\n                    width='100%'\n                    error={messagesError ? true : false}\n                />\n                <CountedData \n                    loading={messagesLoading}\n                    heading=\"Count of online users\"\n                    count={messages?.onlineUsers ?? 0}\n                    subHeading='Users who used messaging'\n                    subCount={messages?.messagedUsersToday ?? 0}\n                    width='100%'\n                    error={messagesError ? true : false}\n                />\n                    <ButtonOne \n                        text='Moods details'\n                        onClick={() => navigate('/messages/moods')}\n                        width='100%'\n                        borderRadius='20px'\n                        height='100px'\n                    />\n        </div>\n    )\n}\n\nexport default Messsages;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CountedData_container__5gzN8\",\"heading\":\"CountedData_heading__YtOL8\",\"count\":\"CountedData_count__A3eFJ\",\"sub-heading\":\"CountedData_sub-heading__q2wla\",\"view\":\"CountedData_view__dvvrN\",\"loading\":\"CountedData_loading__T9e1f\",\"loading-animation\":\"CountedData_loading-animation__r1tmK\"};","// extracted by mini-css-extract-plugin\nexport default {\"view\":\"ViewText_view__BfL6q\"};","import styles from './ViewText.module.css';\n\nfunction ViewText(){\n\n    return (\n        <div className={styles.container}>\n            view &#8594;\n        </div>\n    )\n}\n\nexport default ViewText","import styles from './CountedData.module.css';\nimport { stringOrNumber} from '../../../types'\nimport ViewText from '../ViewText/ViewText';\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\n\ntype props = {\n    heading: string;\n    count: number;\n    subHeading: string;\n    subCount: stringOrNumber;\n    theme?: 'light' | 'dark';\n    width?: string;\n    loading: boolean;\n    error?: boolean;\n    height?: string;\n    onClick?: () => void;\n}\nfunction CountedData({heading, count, subHeading, subCount, theme = 'light', width, loading , error = false, height = '', onClick}: props){\n    return ( \n        <div onClick={onClick} className={styles.container} style={theme === 'light' ? {color: 'black', backgroundColor: 'var(--silver-color-light)', width, height} : {color: 'white', backgroundColor: 'var(--blue-color-dark)', width, height}}>\n            {\n                loading ?\n                <div className={styles.loading}>\n\n                </div> : \n                <>\n                    <div className={styles.heading}>\n                        {heading}\n                    </div>\n                    <div className={styles.count} style={error ? {color: 'red'} : {}}>\n                        {!error ? count : <ErrorMessage/>}\n                    </div>\n                    <div className={styles[\"sub-heading\"]}>\n                        {subHeading} - <strong style={error ? {color: 'red'} : {}}>{!error ? subCount : <ErrorMessage size='15px' />}</strong>\n                    </div>\n                    <div className={styles.view}>\n                        <ViewText />\n                    </div> \n                </>\n            }\n        </div>\n    )\n}\n\nexport default CountedData;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ErrorMessage_container__9e608\"};","import styles from './ErrorMessage.module.css';\nimport React from 'react'\ninterface props {\n    size?: string, \n    text?: string\n}\nfunction ErrorMessage({size = '20px', text = 'Try again'}: props){\n    const src = require(`../../../images/icons/error-red.png`);\n    return (\n        <div className={styles.container}>\n            <img src={src} alt='error' style={{maxWidth: size, maxHeight: size}}/>\n            <div className={styles.text} style={{fontSize: size}}>\n                {text}\n            </div>\n        </div>\n    )\n}\n\nexport default ErrorMessage;","import { useState, useEffect, useCallback } from 'react';\nimport axios, { AxiosRequestConfig, AxiosResponse, AxiosError, CancelTokenSource} from 'axios';\n\ninterface useApiProps {\n    url: string,\n    options?: AxiosRequestConfig,\n    fetch?: boolean\n}\n\ntype useApiOutput<T> = [\n    T | null,\n    AxiosError | null,\n    boolean,\n    () => void,\n    (() => void) | undefined\n]\n\nfunction useApi<T>({url, options = { method: 'GET'}, fetch = true}: useApiProps): useApiOutput<T>{\n\n    const [ response, setResponse ] = useState<T | null>(null);\n    const [ error, setError ] = useState<AxiosError | null>(null);\n    const [ loading, setLoading ] = useState<boolean>(fetch);\n    const [ cancel, setCancel ] = useState<CancelTokenSource | null>(null);\n    const [ shouldFetch, setShouldFetch ] = useState<boolean>(fetch);\n    const [ fetchAgain, setFetchAgain ] = useState<boolean>(false)\n\n    const doFetch = useCallback(() => {\n        setShouldFetch(true);\n        setLoading(true);\n        setFetchAgain(prev => !prev);\n    },[])\n\n    useEffect(() => {\n        const source = axios.CancelToken.source();\n        setCancel(source);\n        if(shouldFetch){\n            axios(url,{\n                ...options,\n                cancelToken: source.token\n            }).then((res: AxiosResponse) => {\n                setResponse(res.data)\n                setLoading(false)\n            }).catch((error) => {\n                if(!axios.isCancel(error)){\n                    setError(error)\n                    setLoading(false)\n                }\n            })\n        }\n        \n        return () => {\n            source.cancel(\"API Request was cancelled!\")\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[shouldFetch, fetchAgain])\n\n    return [ response, error, loading, doFetch, cancel?.cancel ]\n}\n\nexport default useApi;"],"names":["_messages$totalMessag","_messages$totalMessag2","_messages$onlineUsers","_messages$messagedUse","navigate","useNavigate","_useApi","useApi","url","_useApi2","_slicedToArray","messages","messagesError","messagesLoading","_jsxs","className","styles","children","_jsx","CountedData","loading","heading","count","totalMessages","subHeading","subCount","totalMessagesToday","width","error","onlineUsers","messagedUsersToday","ButtonOne","text","onClick","borderRadius","height","_ref","_ref$theme","theme","_ref$error","_ref$height","style","color","backgroundColor","_Fragment","ErrorMessage","size","ViewText","_ref$size","_ref$text","src","require","alt","maxWidth","maxHeight","fontSize","_ref$options","options","method","_ref$fetch","fetch","_useState","useState","_useState2","response","setResponse","_useState3","_useState4","setError","_useState5","_useState6","setLoading","_useState7","_useState8","cancel","setCancel","_useState9","_useState10","shouldFetch","setShouldFetch","_useState11","_useState12","fetchAgain","setFetchAgain","doFetch","useCallback","prev","useEffect","source","axios","_objectSpread","cancelToken","token","then","res","data","catch"],"sourceRoot":""}