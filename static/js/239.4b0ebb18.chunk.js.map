{"version":3,"file":"static/js/239.4b0ebb18.chunk.js","mappings":"wLACA,EAA4B,+BAA5B,EAAqE,6BAArE,EAA6G,8BAA7G,EAA8L,2BAA9L,EAAiO,2BAAjO,EAA0W,uC,+EC0O1W,MApNA,WAAuB,IAADA,EAGZC,GAAWC,EAAAA,EAAAA,MACjBC,GAAyBC,EAAAA,EAAAA,MACnBC,GADoCC,EAAAA,EAAAA,GAAAH,EAAA,GAAtB,GACII,IAAI,MAE5BC,GAAkCC,EAAAA,EAAAA,KAA1BC,EAAKF,EAALE,MAAOC,EAAcH,EAAdG,eAEfC,GAAoDC,EAAAA,EAAAA,GAAa,CAC7DC,IAAI,mBAADC,OAAqBV,KAC1BW,GAAAV,EAAAA,EAAAA,GAAAM,EAAA,GAFMK,EAAID,EAAA,GAAEE,EAASF,EAAA,GAAEG,EAAWH,EAAA,GAAEI,EAASJ,EAAA,GAI/CK,GAAqDR,EAAAA,EAAAA,GAAa,CAC9DC,IAAI,iBAADC,OAAmBV,GACtBiB,QAAS,CACLC,OAAQ,OAEZC,OAAO,IACTC,GAAAnB,EAAAA,EAAAA,GAAAe,EAAA,GANMK,EAAKD,EAAA,GAAEE,EAAUF,EAAA,GAAEG,EAAYH,EAAA,GAAEI,EAAOJ,EAAA,GAQhDK,GAA6DjB,EAAAA,EAAAA,GAAa,CACtEC,IAAI,mBAADC,OAAqBV,GACxBiB,QAAS,CACLC,OAAQ,OAEZC,OAAO,IACTO,GAAAzB,EAAAA,EAAAA,GAAAwB,EAAA,GANME,EAAOD,EAAA,GAAEE,EAAYF,EAAA,GAAEG,EAAcH,EAAA,GAAEI,EAASJ,EAAA,GA0DxD,OA1CAK,EAAAA,EAAAA,YAAU,WACHV,IACCN,IACAV,EAAM,CACF2B,gBAAiB,QACjBC,QAAS,8BAIrB,GAAE,CAACZ,KAEHU,EAAAA,EAAAA,YAAU,WACHJ,IACCZ,IACAV,EAAM,CACF2B,gBAAiB,QACjBC,QAAS,gCAIrB,GAAE,CAACN,KAEHI,EAAAA,EAAAA,YAAU,WACHT,GACCjB,EAAM,CACF2B,gBAAiB,MACjBC,QAAS,qCAIrB,GAAE,CAACX,KAEHS,EAAAA,EAAAA,YAAU,WACHH,GACCvB,EAAM,CACF2B,gBAAiB,MACjBC,QAAS,uCAIrB,GAAE,CAACL,KAGCM,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,CAEzB/B,EAGAQ,GAAcwB,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,MAAM,UAC7B3B,GAAYyB,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CAACC,KAAK,+CACnCR,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,EAC3BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,cAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM+B,UAGfT,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,cAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMgC,aAGfV,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,mBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMiC,iBAGfX,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,qBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMkC,SAASC,aAGxBb,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,gBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAC3B,IAAIW,KAAmB,QAAfrD,EAAK,OAAJiB,QAAI,IAAJA,OAAI,EAAJA,EAAMqC,gBAAQ,IAAAtD,EAAAA,EAAI,GAAGuD,uBAGvChB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,aAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAEpB,OAAJzB,QAAI,IAAJA,GAAAA,EAAMuC,QACNb,EAAAA,EAAAA,KAAA,QAAMc,MAAO,CAACZ,MAAO,SAASH,SAAC,YAG/BC,EAAAA,EAAAA,KAAA,QAAMc,MAAO,CAACZ,MAAO,OAAOH,SAAC,qBAMzCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,kBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAMyC,MAAMN,aAGrBb,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,qBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM0C,SAASP,aAGxBb,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,qBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM2C,oBAGfrB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,oBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM4C,mBAGftB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAmBC,SAAA,EAC/BC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SAAC,mBAGjCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAgBC,SACvB,OAAJzB,QAAI,IAAJA,OAAI,EAAJA,EAAM6C,kBAGfvB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA4BC,SAAA,EACxCC,EAAAA,EAAAA,KAACoB,EAAAA,EAAS,CACNhB,KAAK,UACLiB,QAAS,kBAAM/D,GAAU,EAAE,EAC3BgE,MAAM,QAGF,OAAJhD,QAAI,IAAJA,GAAAA,EAAMuC,QACNb,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CACNnB,KAAK,QACLiB,QArKJ,WAChBnC,GACJ,EAoKwBoC,MAAM,MACNE,QAASvC,KAEbe,EAAAA,EAAAA,KAACuB,EAAAA,EAAS,CACNnB,KAAK,UACLiB,QAvKF,WAClB7B,GACJ,EAsKwB8B,MAAM,MACNE,QAASjC,YAQrC,C,uDCxOA,OAAgB,UAAY,iC,mBCiB5B,MAZA,SAAqBkC,GAA6C,IAADC,EAAAD,EAA1CE,KAAAA,OAAI,IAAAD,EAAG,OAAMA,EAAAE,EAAAH,EAAErB,KAAAA,OAAI,IAAAwB,EAAG,YAAWA,EAC9CC,EAAMC,EAAQ,KACpB,OACIlC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAAA,UAAiBC,SAAA,EAC7BC,EAAAA,EAAAA,KAAA,OAAK6B,IAAKA,EAAKE,IAAI,QAAQjB,MAAO,CAACkB,SAAUL,EAAMM,UAAWN,MAC9D3B,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAAA,KAAagB,MAAO,CAACoB,SAAUP,GAAM5B,SAChDK,MAIjB,C,yFCfA,EAA4B,yB,SCgB5B,MAVA,SAAcqB,GAAiD,IAA/C/B,EAAe+B,EAAf/B,gBAAiBC,EAAO8B,EAAP9B,QAG7B,OADAD,EAAe,SAAAtB,OAAYsB,EAAe,YAEtCM,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAkBgB,MAAO,CAACpB,gBAAAA,GAAiBK,SACtDJ,GAGb,ECcA,MA1BA,WAEI,IAAAwC,GAAoCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAA1E,EAAAA,EAAAA,GAAAwE,EAAA,GAApDG,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC/BG,GAAsCJ,EAAAA,EAAAA,UAAgB,CAClD1C,gBAAiB,QACjBC,QAAS,YACX8C,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAHME,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAIjCG,GAAoCR,EAAAA,EAAAA,YAA+BS,GAAAlF,EAAAA,EAAAA,GAAAiF,EAAA,GAA3DE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAEzB9E,GAAQiF,EAAAA,EAAAA,cAAY,SAACC,GAEvBC,aAAaJ,GACbH,EAAcM,GACdV,GAAa,GACb,IAAMY,EAAUC,OAAOC,YAAW,WAC9Bd,GAAa,EACjB,GAAG,KACHQ,EAAaI,EACjB,GAAE,CAACL,IAKH,MAAO,CAAE9E,eAFcsE,GAAYtC,EAAAA,EAAAA,KAACsD,GAAKC,EAAAA,EAAAA,GAAA,GAAKb,IAAiB,KAEtC3E,MAAAA,EAC7B,C,mECgCA,IA1CA,SAAe0D,GAAmF,IAA9EtD,EAAGsD,EAAHtD,IAAGqF,EAAA/B,EAAE9C,QAAAA,OAAO,IAAA6E,EAAG,CAAE5E,OAAQ,OAAM4E,EAAAC,EAAAhC,EAAE5C,MAAAA,OAAK,IAAA4E,GAAOA,EAE7DtB,GAAkCC,EAAAA,EAAAA,UAAmB,MAAKC,GAAA1E,EAAAA,EAAAA,GAAAwE,EAAA,GAAlDuB,EAAQrB,EAAA,GAAEsB,EAAWtB,EAAA,GAC7BG,GAA4BJ,EAAAA,EAAAA,UAA4B,MAAKK,GAAA9E,EAAAA,EAAAA,GAAA6E,EAAA,GAArDoB,EAAKnB,EAAA,GAAEoB,EAAQpB,EAAA,GACvBG,GAAgCR,EAAAA,EAAAA,UAAkBvD,GAAMgE,GAAAlF,EAAAA,EAAAA,GAAAiF,EAAA,GAAhDpB,EAAOqB,EAAA,GAAEiB,EAAUjB,EAAA,GAC3BkB,GAA8B3B,EAAAA,EAAAA,UAAmC,MAAK4B,GAAArG,EAAAA,EAAAA,GAAAoG,EAAA,GAA9DE,EAAMD,EAAA,GAAEE,EAASF,EAAA,GACzBG,GAAwC/B,EAAAA,EAAAA,UAAkBvD,GAAMuF,GAAAzG,EAAAA,EAAAA,GAAAwG,EAAA,GAAxDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GACnCG,GAAsCnC,EAAAA,EAAAA,WAAkB,GAAMoC,GAAA7G,EAAAA,EAAAA,GAAA4G,EAAA,GAAtDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE3BG,GAAU3B,EAAAA,EAAAA,cAAY,WACxBsB,GAAe,GACfR,GAAW,GACXY,GAAc,SAAAE,GAAI,OAAKA,CAAI,GAC/B,GAAE,IA0BF,OAxBAnF,EAAAA,EAAAA,YAAU,WACN,IAAMoF,EAASC,EAAAA,EAAAA,YAAAA,SAiBf,OAhBAZ,EAAUW,GACPR,IACCS,EAAAA,EAAAA,GAAM3G,GAAGoF,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF5E,GAAO,IACVoG,YAAaF,EAAOG,SACrBC,MAAK,SAACC,GACLvB,EAAYuB,EAAIC,MAChBrB,GAAW,EACf,IAAGsB,OAAM,SAACxB,GACFkB,EAAAA,EAAAA,SAAelB,KACfC,EAASD,GACTE,GAAW,GAEnB,IAGG,WACHe,EAAOZ,OAAO,6BAClB,CAEJ,GAAE,CAACI,EAAaI,IAET,CAAEf,EAAUE,EAAOpC,EAASmD,EAAe,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQA,OACxD,C","sources":["webpack://frontend/./src/components/fragments/PostDetails/PostDetails.module.css?1ab3","components/fragments/PostDetails/PostDetails.tsx","webpack://frontend/./src/components/general/ErrorMessage/ErrorMessage.module.css?4416","components/general/ErrorMessage/ErrorMessage.tsx","webpack://frontend/./src/components/general/Alert/Alert.module.css?920a","components/general/Alert/Alert.tsx","customHooks/alert.tsx","customHooks/api.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PostDetails_container__M5Yal\",\"wrapper\":\"PostDetails_wrapper__B8aUg\",\"contents\":\"PostDetails_contents__Efz0G\",\"content-2\":\"PostDetails_content-2__gsp5-\",\"field\":\"PostDetails_field__oRf3z\",\"value\":\"PostDetails_value__WxgYX\",\"image-container\":\"PostDetails_image-container__hOry7\",\"image\":\"PostDetails_image__CMtgP\",\"buttons-container\":\"PostDetails_buttons-container__YzijC\"};","import { useNavigate, useSearchParams } from 'react-router-dom';\nimport styles from './PostDetails.module.css';\nimport { useEffect } from 'react';\nimport useApi from '../../../customHooks/api';\nimport useAlert from '../../../customHooks/alert';\nimport Loading from '../../general/Loading/Loading';\nimport ErrorMessage from '../../general/ErrorMessage/ErrorMessage';\nimport ButtonOne from '../../general/ButtonOne/ButtonOne';\nimport ButtonTwo from '../../general/ButtonTwo/ButtonTwo';\n\ninterface Post {\n    _id: string;\n    userId: string;\n    withUserId: string;\n    postedAt: Date;\n    status: boolean;\n    messages: {}[];\n    likes: string[];\n    dislikes: string[];\n    commentsCount: number;\n    repliesCount: number;\n    sharesCount: number;\n}\nfunction PostDetails(){\n\n\n    const navigate = useNavigate()\n    const [ searchParams ] = useSearchParams();\n    const id = searchParams.get(\"id\");\n\n    const { alert, AlertComponent } = useAlert();\n\n    const [ post, postError, postLoading, fetchPost ] = useApi<Post>({\n        url: `/postDetails?id=${id}`,\n    })\n\n    const [ block, blockError, blockLoading, doBlock ] = useApi<Post>({\n        url: `/postBlock?id=${id}`,\n        options: {\n            method: \"GET\"\n        },\n        fetch: false\n    })\n\n    const [ unblock, unblockError, unblockLoading, doUnblock ] = useApi<Post>({\n        url: `/postUnblock?id=${id}`,\n        options: {\n            method: \"GET\"\n        },\n        fetch: false\n    })\n\n    const handleBlock = () => {\n        doBlock();\n    }\n\n    const handleUnblock = () => {\n        doUnblock()\n    }\n\n    useEffect(() => {\n        if(block){\n            fetchPost();\n            alert({\n                backgroundColor: 'green',\n                message: \"Post blocked successfully\"\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[block])\n\n    useEffect(() => {\n        if(unblock){\n            fetchPost();\n            alert({\n                backgroundColor: 'green',\n                message: \"Post unblocked successfully\"\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[unblock])\n\n    useEffect(() => {\n        if(blockError){\n            alert({\n                backgroundColor: \"red\",\n                message: \"Error occured while blocking post\"\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[blockError])\n\n    useEffect(() => {\n        if(unblockError){\n            alert({\n                backgroundColor: \"red\",\n                message: \"Error occured while unblocking post\"\n            })\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[unblockError])\n    \n    return (\n        <div className={styles.container}>\n            {\n                AlertComponent\n            }\n            {\n                postLoading ? <Loading color='black'/> :\n                postError ? <ErrorMessage text='Error occured while fetching post details' /> :\n            <div className={styles.wrapper}>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Post Id:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?._id}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        user Id:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.userId}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        with user Id:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.withUserId}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Messages count:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.messages.length}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Posted at:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {new Date(post?.postedAt ?? 0).toLocaleString()}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Status:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {\n                            post?.status ?\n                            <span style={{color: 'green'}}>\n                                Active\n                            </span> :\n                            <span style={{color: 'red'}}>\n                                Not-active\n                            </span>\n                        }\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Likes count:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.likes.length}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Dislikes count:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.dislikes.length}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Comments count:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.commentsCount}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Replies count:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.repliesCount}\n                    </div>\n                </div>\n                <div className={styles[\"contents\"]}>\n                    <div className={styles[\"field\"]}>\n                        Shares count:\n                    </div>\n                    <div className={styles[\"value\"]}>\n                        {post?.sharesCount}\n                    </div>\n                </div>\n                <div className={styles[\"buttons-container\"]}>\n                    <ButtonOne\n                        text='GO BACK'\n                        onClick={() => navigate(-1)}\n                        width='50%'\n                    />\n                    {\n                        post?.status ?\n                        <ButtonTwo\n                            text='BLOCK'\n                            onClick={handleBlock}\n                            width='50%'\n                            loading={blockLoading}\n                        /> :\n                        <ButtonTwo\n                            text='UNBLOCK'\n                            onClick={handleUnblock}\n                            width='50%'\n                            loading={unblockLoading}\n                        />\n                    }\n                </div>\n            </div>\n            }\n        </div>\n    )\n}\n\nexport default PostDetails;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ErrorMessage_container__9e608\"};","import styles from './ErrorMessage.module.css';\nimport React from 'react'\ninterface props {\n    size?: string, \n    text?: string\n}\nfunction ErrorMessage({size = '20px', text = 'Try again'}: props){\n    const src = require(`../../../images/icons/error-red.png`);\n    return (\n        <div className={styles.container}>\n            <img src={src} alt='error' style={{maxWidth: size, maxHeight: size}}/>\n            <div className={styles.text} style={{fontSize: size}}>\n                {text}\n            </div>\n        </div>\n    )\n}\n\nexport default ErrorMessage;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Alert_container__37xgO\",\"container-animation\":\"Alert_container-animation__q+ca7\"};","import styles from './Alert.module.css';\n\nexport interface Props {\n    backgroundColor: string;\n    message: string;\n}\n\nfunction Alert({backgroundColor, message}: Props): JSX.Element{\n\n    backgroundColor = `var(--${backgroundColor}-color)`;\n    return (\n        <div className={styles.container} style={{backgroundColor}}>\n            {message}\n        </div>\n    )\n}\n\nexport default Alert;","import { useCallback, useState } from \"react\";\nimport Alert, { Props } from \"../components/general/Alert/Alert\";\n\nfunction useAlert(){\n\n    const [ isVisible, setIsVisible ] = useState<boolean>(false);\n    const [ alertProps, setAlertProps ] = useState<Props>({\n        backgroundColor: \"black\",\n        message: \"message\"\n    })\n    const [ timeoutId, setTimeoutId ] = useState<number | undefined >();\n    \n    const alert = useCallback((props: Props) => {\n\n        clearTimeout(timeoutId)\n        setAlertProps(props)\n        setIsVisible(true);\n        const timeout = window.setTimeout(() => {\n            setIsVisible(false);\n        }, 2000)\n        setTimeoutId(timeout);\n    },[timeoutId])\n\n\n    const AlertComponent = isVisible ? <Alert {...alertProps} /> : null;\n\n    return { AlertComponent, alert };\n}\n\nexport default useAlert;","import { useState, useEffect, useCallback } from 'react';\nimport axios, { AxiosRequestConfig, AxiosResponse, AxiosError, CancelTokenSource} from 'axios';\n\ninterface useApiProps {\n    url: string,\n    options?: AxiosRequestConfig,\n    fetch?: boolean\n}\n\ntype useApiOutput<T> = [\n    T | null,\n    AxiosError | null,\n    boolean,\n    () => void,\n    (() => void) | undefined\n]\n\nfunction useApi<T>({url, options = { method: 'GET'}, fetch = true}: useApiProps): useApiOutput<T>{\n\n    const [ response, setResponse ] = useState<T | null>(null);\n    const [ error, setError ] = useState<AxiosError | null>(null);\n    const [ loading, setLoading ] = useState<boolean>(fetch);\n    const [ cancel, setCancel ] = useState<CancelTokenSource | null>(null);\n    const [ shouldFetch, setShouldFetch ] = useState<boolean>(fetch);\n    const [ fetchAgain, setFetchAgain ] = useState<boolean>(false)\n\n    const doFetch = useCallback(() => {\n        setShouldFetch(true);\n        setLoading(true);\n        setFetchAgain(prev => !prev);\n    },[])\n\n    useEffect(() => {\n        const source = axios.CancelToken.source();\n        setCancel(source);\n        if(shouldFetch){\n            axios(url,{\n                ...options,\n                cancelToken: source.token\n            }).then((res: AxiosResponse) => {\n                setResponse(res.data)\n                setLoading(false)\n            }).catch((error) => {\n                if(!axios.isCancel(error)){\n                    setError(error)\n                    setLoading(false)\n                }\n            })\n        }\n        \n        return () => {\n            source.cancel(\"API Request was cancelled!\")\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[shouldFetch, fetchAgain])\n\n    return [ response, error, loading, doFetch, cancel?.cancel ]\n}\n\nexport default useApi;"],"names":["_post$postedAt","navigate","useNavigate","_useSearchParams","useSearchParams","id","_slicedToArray","get","_useAlert","useAlert","alert","AlertComponent","_useApi","useApi","url","concat","_useApi2","post","postError","postLoading","fetchPost","_useApi3","options","method","fetch","_useApi4","block","blockError","blockLoading","doBlock","_useApi5","_useApi6","unblock","unblockError","unblockLoading","doUnblock","useEffect","backgroundColor","message","_jsxs","className","styles","children","_jsx","Loading","color","ErrorMessage","text","_id","userId","withUserId","messages","length","Date","postedAt","toLocaleString","status","style","likes","dislikes","commentsCount","repliesCount","sharesCount","ButtonOne","onClick","width","ButtonTwo","loading","_ref","_ref$size","size","_ref$text","src","require","alt","maxWidth","maxHeight","fontSize","_useState","useState","_useState2","isVisible","setIsVisible","_useState3","_useState4","alertProps","setAlertProps","_useState5","_useState6","timeoutId","setTimeoutId","useCallback","props","clearTimeout","timeout","window","setTimeout","Alert","_objectSpread","_ref$options","_ref$fetch","response","setResponse","error","setError","setLoading","_useState7","_useState8","cancel","setCancel","_useState9","_useState10","shouldFetch","setShouldFetch","_useState11","_useState12","fetchAgain","setFetchAgain","doFetch","prev","source","axios","cancelToken","token","then","res","data","catch"],"sourceRoot":""}