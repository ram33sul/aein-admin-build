{"version":3,"file":"static/js/748.2fd1a7b3.chunk.js","mappings":"4MACA,EAA4B,8BAA5B,EAAoE,4B,uCC8FpE,MAtFA,WAEI,IAAMA,GAAWC,EAAAA,EAAAA,MAEjBC,GAA0BC,EAAAA,EAAAA,UAAiB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACrBI,GAA4BL,EAAAA,EAAAA,UAAiB,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAEvBG,GAAoCT,EAAAA,EAAAA,UAAiB,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC/BG,GAAsCb,EAAAA,EAAAA,UAAiB,IAAGc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAAlDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAEjCG,GAAkCC,EAAAA,EAAAA,KAA1BC,EAAcF,EAAdE,eAAgBC,EAAKH,EAALG,MAExBC,GAA0EC,EAAAA,EAAAA,GAAO,CAC7EC,IAAI,WACJC,QAAS,CACLC,OAAQ,OACRC,KAAM,CACFvB,KAAAA,EACAI,MAAAA,IAGRoB,OAAO,IACTC,GAAA1B,EAAAA,EAAAA,GAAAmB,EAAA,GAVMQ,EAAcD,EAAA,GAAEE,EAAWF,EAAA,GAAEG,EAAaH,EAAA,GAAEI,EAAiBJ,EAAA,GAwDrE,OA9BAK,EAAAA,EAAAA,YAAU,WACU,IAADC,EACkCC,EAAAC,EAD9CN,IACIO,MAAMC,QAA4B,QAArBJ,EAACJ,EAAYS,gBAAQ,IAAAL,OAAA,EAApBA,EAAsBR,MACf,QAApBS,EAAAL,EAAYS,gBAAQ,IAAAJ,GAAM,QAANC,EAApBD,EAAsBT,YAAI,IAAAU,GAA1BA,EAA4BI,SAAQ,SAACC,GACb,UAAZ,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOC,OACN9B,EAAa6B,EAAME,SACK,WAAZ,OAALF,QAAK,IAALA,OAAK,EAALA,EAAOC,QACd1B,EAAcyB,EAAME,QAE5B,IAEAvB,EAAM,CACFwB,gBAAiB,MACjBD,QAAS,wBAIzB,GAAG,CAACb,KAEJG,EAAAA,EAAAA,YAAU,WACHJ,IACCzB,EAAQ,IACRI,EAAS,IACTY,EAAM,CACFwB,gBAAiB,QACjBD,QAAS,+BAGrB,GAAE,CAACd,KAGCgB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAiBC,SAAA,CAEzB7B,GAEJ0B,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAeC,SAAA,CAAC,YACpBC,EAAAA,EAAAA,KAAA,UAAAD,SAAQ,aAEpBC,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACT,MAAO9B,EAAWwC,MAAM,OAAOC,MAAM,OAAOC,MAAOlD,EAAMmD,SAhDhD,SAACC,GACrB3C,EAAa,IACbR,EAAQmD,EAAEC,OAAOH,MACrB,KA8CQJ,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACT,MAAO1B,EAAYoC,MAAM,OAAOC,MAAM,QAAQC,MAAO9C,EAAO+C,SA5ClD,SAACC,GACtBvC,EAAc,IACdR,EAAS+C,EAAEC,OAAOH,MACtB,KA0CQR,EAAAA,EAAAA,MAACY,EAAAA,EAAS,CAACN,MAAM,OAAOO,IAAI,OAAOC,OAAO,OAAOC,OAAO,SAAQZ,SAAA,EAC5DC,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,KAAK,MAAOX,MAAM,MAAMY,QAvDd,WAC7B/B,GACJ,EAqDsEgC,QAASjC,KACnEkB,EAAAA,EAAAA,KAACY,EAAAA,EAAS,CAACC,KAAK,SAASG,KAAK,SAASd,MAAM,MAAMY,QAAS,kBAAMlE,GAAU,EAAE,SAI9F,C,yFC5FA,EAA4B,yB,SCgB5B,MAVA,SAAcqE,GAAiD,IAA/CtB,EAAesB,EAAftB,gBAAiBD,EAAOuB,EAAPvB,QAG7B,OADAC,EAAe,SAAAuB,OAAYvB,EAAe,YAEtCK,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAAkBqB,MAAO,CAACxB,gBAAAA,GAAiBI,SACtDL,GAGb,ECcA,MA1BA,WAEI,IAAA5C,GAAoCC,EAAAA,EAAAA,WAAkB,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDsE,EAASpE,EAAA,GAAEqE,EAAYrE,EAAA,GAC/BI,GAAsCL,EAAAA,EAAAA,UAAgB,CAClD4C,gBAAiB,QACjBD,QAAS,YACXrC,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAHMkE,EAAUjE,EAAA,GAAEkE,EAAalE,EAAA,GAIjCG,GAAoCT,EAAAA,EAAAA,YAA+BU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA3DgE,EAAS/D,EAAA,GAAEgE,EAAYhE,EAAA,GAEzBU,GAAQuD,EAAAA,EAAAA,cAAY,SAACC,GAEvBC,aAAaJ,GACbD,EAAcI,GACdN,GAAa,GACb,IAAMQ,EAAUC,OAAOC,YAAW,WAC9BV,GAAa,EACjB,GAAG,KACHI,EAAaI,EACjB,GAAE,CAACL,IAKH,MAAO,CAAEtD,eAFckD,GAAYpB,EAAAA,EAAAA,KAACgC,GAAKC,EAAAA,EAAAA,GAAA,GAAKX,IAAiB,KAEtCnD,MAAAA,EAC7B,C,mECgCA,IA1CA,SAAe8C,GAAmF,IAA9E3C,EAAG2C,EAAH3C,IAAG4D,EAAAjB,EAAE1C,QAAAA,OAAO,IAAA2D,EAAG,CAAE1D,OAAQ,OAAM0D,EAAAC,EAAAlB,EAAEvC,MAAAA,OAAK,IAAAyD,GAAOA,EAE7DrF,GAAkCC,EAAAA,EAAAA,UAAmB,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDwC,EAAQtC,EAAA,GAAEoF,EAAWpF,EAAA,GAC7BI,GAA4BL,EAAAA,EAAAA,UAA4B,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAArDoC,EAAKnC,EAAA,GAAEgF,EAAQhF,EAAA,GACvBG,GAAgCT,EAAAA,EAAAA,UAAkB2B,GAAMjB,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAhDuD,EAAOtD,EAAA,GAAE6E,EAAU7E,EAAA,GAC3BG,GAA8Bb,EAAAA,EAAAA,UAAmC,MAAKc,GAAAZ,EAAAA,EAAAA,GAAAW,EAAA,GAA9D2E,EAAM1E,EAAA,GAAE2E,EAAS3E,EAAA,GACzB4E,GAAwC1F,EAAAA,EAAAA,UAAkB2B,GAAMgE,GAAAzF,EAAAA,EAAAA,GAAAwF,EAAA,GAAxDE,EAAWD,EAAA,GAAEE,EAAcF,EAAA,GACnCG,GAAsC9F,EAAAA,EAAAA,WAAkB,GAAM+F,GAAA7F,EAAAA,EAAAA,GAAA4F,EAAA,GAAtDE,EAAUD,EAAA,GAAEE,EAAaF,EAAA,GAE3BG,GAAUvB,EAAAA,EAAAA,cAAY,WACxBkB,GAAe,GACfN,GAAW,GACXU,GAAc,SAAAE,GAAI,OAAKA,CAAI,GAC/B,GAAE,IA0BF,OAxBAlE,EAAAA,EAAAA,YAAU,WACN,IAAMmE,EAASC,EAAAA,EAAAA,YAAAA,SAiBf,OAhBAZ,EAAUW,GACPR,IACCS,EAAAA,EAAAA,GAAM9E,GAAG2D,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACF1D,GAAO,IACV8E,YAAaF,EAAOG,SACrBC,MAAK,SAACC,GACLpB,EAAYoB,EAAI/E,MAChB6D,GAAW,EACf,IAAGmB,OAAM,SAACjE,GACF4D,EAAAA,EAAAA,SAAe5D,KACf6C,EAAS7C,GACT8C,GAAW,GAEnB,IAGG,WACHa,EAAOZ,OAAO,6BAClB,CAEJ,GAAE,CAACI,EAAaI,IAET,CAAEzD,EAAUE,EAAOuB,EAASkC,EAAe,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQA,OACxD,C","sources":["webpack://frontend/./src/components/fragments/AddNewMood/AddNewMood.module.css?4b2f","components/fragments/AddNewMood/AddNewMood.tsx","webpack://frontend/./src/components/general/Alert/Alert.module.css?920a","components/general/Alert/Alert.tsx","customHooks/alert.tsx","customHooks/api.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"AddNewMood_container__fBB+E\",\"heading\":\"AddNewMood_heading__xzEHW\"};","import { useNavigate } from 'react-router-dom';\nimport ButtonOne from '../../general/ButtonOne/ButtonOne';\nimport Container from '../../general/Container/Container';\nimport Input from '../../general/Input/Input';\nimport styles from './AddNewMood.module.css';\nimport { ChangeEvent, useEffect, useState } from 'react';\nimport useApi from '../../../customHooks/api';\nimport useAlert from '../../../customHooks/alert';\n\nfunction AddNewMood(){\n\n    const navigate = useNavigate();\n\n    const [ name, setName ] = useState<string>('');\n    const [ color, setColor ] = useState<string>('');\n\n    const [ nameError, setNameError ] = useState<string>('');\n    const [ colorError, setColorError ] = useState<string>('');\n\n    const { AlertComponent, alert } = useAlert();\n    \n    const [ submitResponse, submitError, submitLoading, submitShouldFetch ] = useApi({\n        url:'/addMood',\n        options: {\n            method: 'POST',\n            data: {\n                name,\n                color\n            }\n        },\n        fetch: false\n    })\n\n    const handleSubmit: () => void = () => {\n        submitShouldFetch();\n    }\n\n    const handleNameInput = (e: ChangeEvent<HTMLInputElement>) => {\n        setNameError('');\n        setName(e.target.value);\n    }\n\n    const handleColorInput = (e: ChangeEvent<HTMLInputElement>) => {\n        setColorError('');\n        setColor(e.target.value);\n    }\n\n    useEffect(() => {\n        if(submitError){\n            if(Array.isArray(submitError.response?.data)){\n                submitError.response?.data?.forEach((error) => {\n                    if(error?.field === 'name'){\n                        setNameError(error.message)\n                    } else if (error?.field === 'color'){\n                        setColorError(error.message)\n                    }\n                })\n            } else {\n                alert({\n                    backgroundColor: 'red',\n                    message: \"Some error occured!\"\n                })\n            }\n        }\n    }, [submitError])\n\n    useEffect(() => {\n        if(submitResponse){\n            setName('');\n            setColor('');\n            alert({\n                backgroundColor: 'green',\n                message: 'Mood is successfully added'\n            })\n        }\n    },[submitResponse])\n\n    return (\n        <div className={styles.container}>\n            {\n                AlertComponent\n            }\n            <div className={styles.heading}>\n                Add new <strong>Mood</strong>\n            </div>\n            <Input error={nameError} width='100%' label='Name' value={name} onChange={handleNameInput} />\n            <Input error={colorError} width='100%' label='Color' value={color} onChange={handleColorInput} />\n            <Container width='100%' gap='10px' height='40px' margin='10px 0'>\n                <ButtonOne text='ADD'  width='50%' onClick={handleSubmit} loading={submitLoading}/>\n                <ButtonOne text='CANCEL' type='reject' width='50%' onClick={() => navigate(-1)} />\n            </Container>\n        </div>\n    )\n}\n\nexport default AddNewMood;","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Alert_container__37xgO\",\"container-animation\":\"Alert_container-animation__q+ca7\"};","import styles from './Alert.module.css';\n\nexport interface Props {\n    backgroundColor: string;\n    message: string;\n}\n\nfunction Alert({backgroundColor, message}: Props): JSX.Element{\n\n    backgroundColor = `var(--${backgroundColor}-color)`;\n    return (\n        <div className={styles.container} style={{backgroundColor}}>\n            {message}\n        </div>\n    )\n}\n\nexport default Alert;","import { useCallback, useState } from \"react\";\nimport Alert, { Props } from \"../components/general/Alert/Alert\";\n\nfunction useAlert(){\n\n    const [ isVisible, setIsVisible ] = useState<boolean>(false);\n    const [ alertProps, setAlertProps ] = useState<Props>({\n        backgroundColor: \"black\",\n        message: \"message\"\n    })\n    const [ timeoutId, setTimeoutId ] = useState<number | undefined >();\n    \n    const alert = useCallback((props: Props) => {\n\n        clearTimeout(timeoutId)\n        setAlertProps(props)\n        setIsVisible(true);\n        const timeout = window.setTimeout(() => {\n            setIsVisible(false);\n        }, 2000)\n        setTimeoutId(timeout);\n    },[timeoutId])\n\n\n    const AlertComponent = isVisible ? <Alert {...alertProps} /> : null;\n\n    return { AlertComponent, alert };\n}\n\nexport default useAlert;","import { useState, useEffect, useCallback } from 'react';\nimport axios, { AxiosRequestConfig, AxiosResponse, AxiosError, CancelTokenSource} from 'axios';\n\ninterface useApiProps {\n    url: string,\n    options?: AxiosRequestConfig,\n    fetch?: boolean\n}\n\ntype useApiOutput<T> = [\n    T | null,\n    AxiosError | null,\n    boolean,\n    () => void,\n    (() => void) | undefined\n]\n\nfunction useApi<T>({url, options = { method: 'GET'}, fetch = true}: useApiProps): useApiOutput<T>{\n\n    const [ response, setResponse ] = useState<T | null>(null);\n    const [ error, setError ] = useState<AxiosError | null>(null);\n    const [ loading, setLoading ] = useState<boolean>(fetch);\n    const [ cancel, setCancel ] = useState<CancelTokenSource | null>(null);\n    const [ shouldFetch, setShouldFetch ] = useState<boolean>(fetch);\n    const [ fetchAgain, setFetchAgain ] = useState<boolean>(false)\n\n    const doFetch = useCallback(() => {\n        setShouldFetch(true);\n        setLoading(true);\n        setFetchAgain(prev => !prev);\n    },[])\n\n    useEffect(() => {\n        const source = axios.CancelToken.source();\n        setCancel(source);\n        if(shouldFetch){\n            axios(url,{\n                ...options,\n                cancelToken: source.token\n            }).then((res: AxiosResponse) => {\n                setResponse(res.data)\n                setLoading(false)\n            }).catch((error) => {\n                if(!axios.isCancel(error)){\n                    setError(error)\n                    setLoading(false)\n                }\n            })\n        }\n        \n        return () => {\n            source.cancel(\"API Request was cancelled!\")\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[shouldFetch, fetchAgain])\n\n    return [ response, error, loading, doFetch, cancel?.cancel ]\n}\n\nexport default useApi;"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","color","setColor","_useState5","_useState6","nameError","setNameError","_useState7","_useState8","colorError","setColorError","_useAlert","useAlert","AlertComponent","alert","_useApi","useApi","url","options","method","data","fetch","_useApi2","submitResponse","submitError","submitLoading","submitShouldFetch","useEffect","_submitError$response","_submitError$response2","_submitError$response3","Array","isArray","response","forEach","error","field","message","backgroundColor","_jsxs","className","styles","children","_jsx","Input","width","label","value","onChange","e","target","Container","gap","height","margin","ButtonOne","text","onClick","loading","type","_ref","concat","style","isVisible","setIsVisible","alertProps","setAlertProps","timeoutId","setTimeoutId","useCallback","props","clearTimeout","timeout","window","setTimeout","Alert","_objectSpread","_ref$options","_ref$fetch","setResponse","setError","setLoading","cancel","setCancel","_useState9","_useState10","shouldFetch","setShouldFetch","_useState11","_useState12","fetchAgain","setFetchAgain","doFetch","prev","source","axios","cancelToken","token","then","res","catch"],"sourceRoot":""}