{"version":3,"file":"static/js/492.8856ac72.chunk.js","mappings":"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","sources":["webpack://frontend/./src/components/fragments/MoodsData/MoodsData.module.css?a12e","components/fragments/MoodsData/MoodsData.tsx","webpack://frontend/./src/components/general/Table/Table.module.css?3a69","components/general/Table/Table.tsx","customHooks/api.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MoodsData_container__el8JD\"};","import { useNavigate } from 'react-router-dom';\nimport useApi from '../../../customHooks/api';\nimport { Mood } from '../../../interfaces';\nimport Table from '../../general/Table/Table';\nimport styles from './MoodsData.module.css';\nimport { useMemo } from 'react';\n\ninterface TableData extends Omit<Mood, \"status\"> {\n    status: string,\n    rowColor: string,\n    onClick: () => void\n}\n\nfunction MoodsData(){\n\n    const [ moods, moodsError, moodsLoading ] = useApi<Mood[]>({\n        url: '/moodsDetails'\n    })\n\n    const navigate = useNavigate();\n\n    const tableData: TableData[] = useMemo(() => moods?.map(mood => {\n        return {\n            ...mood,\n            rowColor: mood.color,\n            status: mood.status ? \"Active\" : \"Not-active\",\n            onClick: () =>  navigate(`/messages/moodDetails?id=${mood._id}`)\n        }\n    }),[moods]) ?? [];\n\n    return(\n        <div className={styles.container}>\n            <Table datas={tableData} headings={[\"name\", \"color\", \"count\", \"status\"]}/>\n        </div>\n    )\n}\n\nexport default MoodsData;","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"Table_table__4XKHf\",\"tr\":\"Table_tr__ptnei\",\"th\":\"Table_th__KMoxr\",\"tb\":\"Table_tb__7hbub\"};","import { Keyable } from '../../../types/object';\nimport styles from './Table.module.css';\n\n\ntype Headings = string[];\ntype Datas = Keyable[];\n\ninterface Props {\n    datas: Datas;\n    headings: Headings;\n}\nfunction Table({datas, headings}: Props) {\n\n    return (\n        <div className={styles.table}>\n            <div className={styles.tr}>\n                {\n                    headings.map(heading => {\n                        return(\n                            <div key={heading} className={styles.th} style={{width: `${100/headings.length}%` }}>\n                                {heading}\n                            </div>\n                        )\n                    })\n                }\n            </div>\n            {\n                datas.map(list => {\n                    return(\n                        <div key={list[headings[0]]} className={styles.tr} onClick={list.onClick}>\n                            {\n                                headings.map(heading => {\n                                    \n                                    return (\n                                        <div key={list[heading]} className={styles.tb} style={{width: `${100/headings.length}%`, color: list.rowColor }}>\n                                            {list[heading]}\n                                        </div>\n                                    )\n                                })\n                            }\n                        </div>\n                    )\n                })\n            }\n        </div>\n    )\n}\n\n\nexport default Table;","import { useState, useEffect, useCallback } from 'react';\nimport axios, { AxiosRequestConfig, AxiosResponse, AxiosError, CancelTokenSource} from 'axios';\n\ninterface useApiProps {\n    url: string,\n    options?: AxiosRequestConfig,\n    fetch?: boolean\n}\n\ntype useApiOutput<T> = [\n    T | null,\n    AxiosError | null,\n    boolean,\n    () => void,\n    (() => void) | undefined\n]\n\nfunction useApi<T>({url, options = { method: 'GET'}, fetch = true}: useApiProps): useApiOutput<T>{\n\n    const [ response, setResponse ] = useState<T | null>(null);\n    const [ error, setError ] = useState<AxiosError | null>(null);\n    const [ loading, setLoading ] = useState<boolean>(fetch);\n    const [ cancel, setCancel ] = useState<CancelTokenSource | null>(null);\n    const [ shouldFetch, setShouldFetch ] = useState<boolean>(fetch);\n    const [ fetchAgain, setFetchAgain ] = useState<boolean>(false)\n\n    const doFetch = useCallback(() => {\n        setShouldFetch(true);\n        setLoading(true);\n        setFetchAgain(prev => !prev);\n    },[])\n\n    useEffect(() => {\n        const source = axios.CancelToken.source();\n        setCancel(source);\n        if(shouldFetch){\n            axios(url,{\n                ...options,\n                cancelToken: source.token\n            }).then((res: AxiosResponse) => {\n                setResponse(res.data)\n                setLoading(false)\n            }).catch((error) => {\n                if(!axios.isCancel(error)){\n                    setError(error)\n                    setLoading(false)\n                }\n            })\n        }\n        \n        return () => {\n            source.cancel(\"API Request was cancelled!\")\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[shouldFetch, fetchAgain])\n\n    return [ response, error, loading, doFetch, cancel?.cancel ]\n}\n\nexport default useApi;"],"names":["_useMemo","_useApi","useApi","url","_useApi2","_slicedToArray","moods","navigate","useNavigate","tableData","useMemo","map","mood","_objectSpread","rowColor","color","status","onClick","concat","_id","_jsx","className","styles","children","Table","datas","headings","_ref","_jsxs","heading","style","width","length","list","_ref$options","options","method","_ref$fetch","fetch","_useState","useState","_useState2","response","setResponse","_useState3","_useState4","error","setError","_useState5","_useState6","loading","setLoading","_useState7","_useState8","cancel","setCancel","_useState9","_useState10","shouldFetch","setShouldFetch","_useState11","_useState12","fetchAgain","setFetchAgain","doFetch","useCallback","prev","useEffect","source","axios","cancelToken","token","then","res","data","catch"],"sourceRoot":""}